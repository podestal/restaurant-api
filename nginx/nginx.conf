# worker_processes 1;

# pid /tmp/nginx.pid;

# events {
#   worker_connections 10000;
# }

# http {
#   gzip on;
#   gzip_proxied any;
#   gzip_types text/plain application/json;
#   gzip_min_length 1000;

#   upstream restaurant {
#     server app:8000;
#   }

#   # Move the limit_req_zone directive here
#   limit_req_zone $binary_remote_addr zone=limit_zone:10m rate=5r/s;

#   server {
#     listen 80;
#     server_name restaurant.podestalservers.com;

#     location / {
#       return 301 https://$host$request_uri;
#     }

#     location /.well-known/acme-challenge/ {
#       root /var/www/certbot;
#     }
#   }

#   server {
#     listen 443 ssl;
#     server_name restaurant.podestalservers.com;

#     ssl_certificate /etc/letsencrypt/live/restaurant.podestalservers.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/restaurant.podestalservers.com/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     location /static/ {
#         alias /vol/static/;
#         expires 1y;
#         add_header Cache-Control "public";
#     }

#     location /media/ {
#         alias /vol/media/;
#         expires off;
#         add_header Cache-Control "no-store";
#     }

#     location /ws/ {
#         proxy_pass http://restaurant;
#         proxy_http_version 1.1;

#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";

#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_cache_bypass $http_upgrade;
#     }

#     location / {
#         limit_req zone=limit_zone burst=10 nodelay;
#         proxy_pass http://restaurant;
#         proxy_http_version 1.1;

#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_cache_bypass $http_upgrade;
#     }
#   }
# }

# Main context
# worker_processes 1;
# pid /tmp/nginx.pid;

# events {
#   worker_connections 10000;
# }

# http {
#   # Enable gzip compression for faster responses
#   gzip on;
#   gzip_proxied any;
#   gzip_types text/plain application/json;
#   gzip_min_length 1000;

#   # Define rate limiting zone
#   limit_req_zone $binary_remote_addr zone=limit_zone:10m rate=5r/s;

#   # Upstream server for Django app
#   upstream restaurant {
#     server app:8000;
#   }

#   # HTTP server block
#   server {
#     listen 80;
#     server_name restaurant.podestalservers.com;

#     # Redirect all HTTP traffic to HTTPS
#     location / {
#       return 301 https://$host$request_uri;
#     }

#     # Location for Let's Encrypt verification
#     location /.well-known/acme-challenge/ {
#       root /var/www/certbot;
#     }
#   }

#   # HTTPS server block
#   server {
#     listen 443 ssl;
#     server_name restaurant.podestalservers.com;

#     # SSL configuration
#     ssl_certificate /etc/letsencrypt/live/restaurant.podestalservers.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/restaurant.podestalservers.com/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     # Enable HSTS (HTTP Strict Transport Security)
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

#     # Prevent MIME type sniffing
#     add_header X-Content-Type-Options "nosniff" always;

#     # Prevent clickjacking
#     add_header X-Frame-Options "DENY" always;

#     # Prevent cross-site scripting
#     add_header X-XSS-Protection "1; mode=block" always;

#     # Set Referrer-Policy for privacy
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;

#     # Static files
#     location /static/ {
#         alias /vol/static/;
#         expires 1y;
#         add_header Cache-Control "public";
#     }

#     # Media files
#     location /media/ {
#         alias /vol/media/;
#         expires off;
#         add_header Cache-Control "no-store";
#     }

#     # WebSocket connections
#     location /ws/ {
#         proxy_pass http://restaurant;
#         proxy_http_version 1.1;

#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";

#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_cache_bypass $http_upgrade;
#     }

#     # Reverse proxy for the Django app
#     location / {
#         # Rate limiting
#         limit_req zone=limit_zone burst=10 nodelay;

#         # Proxy pass
#         proxy_pass http://restaurant;
#         proxy_http_version 1.1;

#         # Proxy headers
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";

#         # Prevent buffering of large uploads
#         client_max_body_size 10M;
#         proxy_buffering off;

#         # Timeout settings
#         proxy_read_timeout 60s;
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;

#         # Prevent caching of dynamic content
#         add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
#         proxy_cache_bypass $http_upgrade;
#     }
#   }
# }


# worker_processes 1;
# pid /tmp/nginx.pid;

# events {
#     worker_connections 10000;
# }

# http {
#     gzip on;
#     gzip_types text/plain application/json;
#     gzip_min_length 1000;

#     limit_req_zone $binary_remote_addr zone=limit_zone:10m rate=5r/s;

#     upstream restaurant {
#         server app:8000;
#     }

#     server {
#         listen 80 default_server;
#         server_name _;
#         return 444;
#     }

#     server {
#         listen 80;
#         server_name restaurant.podestalservers.com;

#         location / {
#             return 301 https://$host$request_uri;
#         }

#         location /.well-known/acme-challenge/ {
#             root /var/www/certbot;
#         }
#     }

#     server {
#         listen 443 ssl;
#         server_name restaurant.podestalservers.com;

#         ssl_certificate /etc/letsencrypt/live/restaurant.podestalservers.com/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/restaurant.podestalservers.com/privkey.pem;
#         include /etc/letsencrypt/options-ssl-nginx.conf;
#         ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#         add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

#         location /static/ {
#             alias /vol/static/;
#             expires 1y;
#             add_header Cache-Control "public";
#         }

#         location /media/ {
#             alias /vol/media/;
#             expires off;
#             add_header Cache-Control "no-store";
#         }

#         location / {
#             limit_req zone=limit_zone burst=5 delay=10;
#             proxy_pass http://restaurant;
#             proxy_http_version 1.1;
#             proxy_set_header Host $host;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }

#         location ~ /\.(?!well-known).* {
#             deny all;
#             return 404;
#         }
#     }
# }

worker_processes 1;
pid /tmp/nginx.pid;

events {
    worker_connections 10000;
}

http {
    gzip on;
    gzip_types text/plain application/json;
    gzip_min_length 1000;

    limit_req_zone $binary_remote_addr zone=limit_zone:10m rate=5r/s;

    upstream restaurant {
        server app:8000;
    }

    server {
        listen 80;
        server_name _;

        location /static/ {
            alias /vol/static/;
            expires 1y;
            add_header Cache-Control "public";
        }

        location /media/ {
            alias /vol/media/;
            expires off;
            add_header Cache-Control "no-store";
        }

        location / {
            limit_req zone=limit_zone burst=5 delay=10;
            proxy_pass http://restaurant;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ /\.(?!well-known).* {
            deny all;
            return 404;
        }
    }
}
